(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["initDesign"],{

/***/ "./src/PageInitialiser/design.ts":
/*!***************************************!*\
  !*** ./src/PageInitialiser/design.ts ***!
  \***************************************/
/*! exports provided: common, mtr, gzmtr */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "common", function() { return common; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mtr", function() { return mtr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gzmtr", function() { return gzmtr; });
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils */ "./src/utils.ts");
/* harmony import */ var _material_list__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @material/list */ "@material/list");
/* harmony import */ var _material_list__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_material_list__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _material_dialog__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @material/dialog */ "@material/dialog");
/* harmony import */ var _material_dialog__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_material_dialog__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _material_select__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @material/select */ "@material/select");
/* harmony import */ var _material_select__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_material_select__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _material_textfield__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @material/textfield */ "@material/textfield");
/* harmony import */ var _material_textfield__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_material_textfield__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _material_switch__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @material/switch */ "@material/switch");
/* harmony import */ var _material_switch__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_material_switch__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _material_ripple__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @material/ripple */ "@material/ripple");
/* harmony import */ var _material_ripple__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_material_ripple__WEBPACK_IMPORTED_MODULE_6__);







function common() {
    // mdc instances
    const designList = _material_list__WEBPACK_IMPORTED_MODULE_1__["MDCList"].attachTo($('#design_list')[0]);
    const [themeDialog, lineNameDialog] = ['#design_theme_diag', '#line_name_diag'].map(selector => _material_dialog__WEBPACK_IMPORTED_MODULE_2__["MDCDialog"].attachTo($(selector)[0]));
    const [themeCitySelect, themeLineSelect] = ['#theme_city', '#theme_line'].map(selector => new _material_select__WEBPACK_IMPORTED_MODULE_3__["MDCSelect"]($(selector)[0]));
    // const themeCitySelect = new MDCSelect($('#theme_city')[0]);
    // const themeLineSelect = new MDCSelect($('#theme_line')[0]);
    const [lineNameZHTextField, lineNameENTextField] = ['#name_zh', '#name_en'].map(selector => _material_textfield__WEBPACK_IMPORTED_MODULE_4__["MDCTextField"].attachTo($('#line_name_diag').find(selector)[0]));
    const platformNumTextField = _material_textfield__WEBPACK_IMPORTED_MODULE_4__["MDCTextField"].attachTo($('#platform_num')[0]);
    $('#panel_design .mdc-list li').map((_, el) => new _material_ripple__WEBPACK_IMPORTED_MODULE_6__["MDCRipple"](el));
    // helper functions
    const getDirectionText = (direc) => {
        return $('#design_list')
            .find(`li#direc p#${direc}`)
            .text();
    };
    // init values
    Promise.resolve(Object(_utils__WEBPACK_IMPORTED_MODULE_0__["getParams"])())
        .then(param => {
        $('#design_list')
            .find('li#name .mdc-list-item__secondary-text')
            .text(param.line_name.join());
        lineNameZHTextField.value = param.line_name[0];
        lineNameENTextField.value = param.line_name[1];
        $('#design_list')
            .find('li#direc .mdc-list-item__secondary-text')
            .text(getDirectionText(param.direction));
        platformNumTextField.value = param.platform_num;
    });
    $.getJSON('data/city_list.json', (data) => {
        let lang = window.urlParams.get('lang');
        data.forEach(c => {
            $('#theme_city__selection').append($('<li>', {
                class: 'mdc-list-item',
                'data-value': c.id
            }).text(Object(_utils__WEBPACK_IMPORTED_MODULE_0__["countryCode2Emoji"])(c.country) + Object(_utils__WEBPACK_IMPORTED_MODULE_0__["getTransText"])(c.name, lang)));
        });
        $('#theme_city__selection li').map((_, el) => new _material_ripple__WEBPACK_IMPORTED_MODULE_6__["MDCRipple"](el));
        var [themeCity] = Object(_utils__WEBPACK_IMPORTED_MODULE_0__["getParams"])().theme;
        var cityIdx = $(`#theme_city__selection > [data-value="${themeCity}"]`).index();
        themeCitySelect.selectedIndex = cityIdx;
    });
    // add event listeners
    designList.listen('MDCList:action', (event) => {
        switch (event.detail.index) {
            case 0:
                themeDialog.open();
                break;
            case 1:
                lineNameDialog.open();
                break;
            case 2:
                if (Object(_utils__WEBPACK_IMPORTED_MODULE_0__["getParams"])().direction == 'r') {
                    console.log('right to left');
                    window.myLine.direction = 'l';
                    $('#design_list').find('li#direc .mdc-list-item__secondary-text').text(getDirectionText('l'));
                }
                else {
                    console.log('left to right');
                    window.myLine.direction = 'r';
                    $('#design_list').find('li#direc .mdc-list-item__secondary-text').text(getDirectionText('r'));
                }
                break;
            case 4:
                window.myLine.reverseStns();
                break;
        }
    });
    themeDialog.listen('MDCDialog:opened', () => {
        [themeCitySelect, themeLineSelect].map(select => select.layout());
    });
    themeCitySelect.listen("MDCSelect:change", (event) => {
        let city = event.detail.value;
        $('#theme_line__selection').empty();
        $.getJSON(`data/${city}.json`, (data) => {
            var lang = window.urlParams.get('lang');
            data.forEach(l => {
                $('#theme_line__selection').append($('<li>', {
                    class: 'mdc-list-item',
                    'data-value': l.id
                }).append($('<span>').css({
                    background: l.colour,
                    color: l.fg || '#fff'
                }).text('\u00a0' + Object(_utils__WEBPACK_IMPORTED_MODULE_0__["getTransText"])(l.name, lang) + '\u00a0')));
            });
            $('#theme_line__selection li').map((_, el) => new _material_ripple__WEBPACK_IMPORTED_MODULE_6__["MDCRipple"](el));
            var param = Object(_utils__WEBPACK_IMPORTED_MODULE_0__["getParams"])();
            param.theme[0] = city;
            Object(_utils__WEBPACK_IMPORTED_MODULE_0__["putParams"])(param);
            var lineIdx = $(`#theme_line__selection > [data-value="${param.theme[1]}"]`).index();
            themeLineSelect.selectedIndex = lineIdx == -1 ? 0 : lineIdx;
        });
    });
    themeLineSelect.listen("MDCSelect:change", (event) => {
        let lineIdx = event.detail.index;
        var param = Object(_utils__WEBPACK_IMPORTED_MODULE_0__["getParams"])();
        param.theme[1] = event.detail.value;
        Object(_utils__WEBPACK_IMPORTED_MODULE_0__["putParams"])(param);
        window.myLine.themeLine = event.detail.value;
        window.myLine.themeColour = ['background-color', 'color']
            .map(prop => $('#theme_line__selection span').eq(lineIdx).css(prop))
            .map(_utils__WEBPACK_IMPORTED_MODULE_0__["rgb2Hex"]);
        $('#design_list')
            .find('li#theme .mdc-list-item__secondary-text')
            .html($('#theme_city__selection li').eq(themeCitySelect.selectedIndex).text() +
            ' ' +
            $('#theme_line__selection li').eq(lineIdx).html().trim());
    });
    lineNameDialog.listen('MDCDialog:opened', event => {
        [lineNameZHTextField, lineNameENTextField].map(textfield => textfield.layout());
    });
    $('#line_name_diag')
        .find('.mdc-text-field')
        .on('input', () => {
        let lineNames = [lineNameZHTextField, lineNameENTextField].map(textfield => textfield.value);
        window.myLine.lineNames = lineNames;
        $('#design_list')
            .find('li#name .mdc-list-item__secondary-text')
            .text(lineNames.join());
    });
    $(platformNumTextField.root_).find('input')
        .on('input', event => window.myLine.platformNum = event.target.value);
}
function mtr() {
    // mdc instances
    const designListMTRList = _material_list__WEBPACK_IMPORTED_MODULE_1__["MDCList"].attachTo($('#design_list_mtr')[0]);
    const charDialog = _material_dialog__WEBPACK_IMPORTED_MODULE_2__["MDCDialog"].attachTo($('#design_char_diag')[0]);
    const legacySwitch = new _material_switch__WEBPACK_IMPORTED_MODULE_5__["MDCSwitch"]($('#legacy')[0]);
    // helper functions
    const getCharText = (char) => {
        return $('#design_char_diag')
            .find('li')
            .filter((_, el) => el.dataset.mdcDialogAction === char)
            .find('span')
            .text();
    };
    // init values
    Promise.resolve(Object(_utils__WEBPACK_IMPORTED_MODULE_0__["getParams"])())
        .then(param => {
        // $('#design_list_mtr')
        //     .find('li#char .mdc-list-item__secondary-text')
        //     .text(getCharText(param.char_form));
        $('#design_char_diag')[0].dispatchEvent(new CustomEvent('MDCDialog:closed', { detail: { action: param.char_form } }));
        // charDialog.close(param.char_form);
        legacySwitch.checked = param.dest_legacy;
    });
    // add event listeners
    designListMTRList.listen('MDCList:action', (event) => {
        switch (event.detail.index) {
            case 0:
                window.myLine.txtFlip = !Object(_utils__WEBPACK_IMPORTED_MODULE_0__["getParams"])().txt_flip;
                break;
            case 1:
                charDialog.open();
                break;
        }
    });
    charDialog.listen('MDCDialog:closed', (event) => {
        let char = event.detail.action;
        if (char == 'close') {
            return;
        }
        window.myLine.charForm = char;
        $('#design_list_mtr')
            .find('li#char .mdc-list-item__secondary-text')
            .text(getCharText(char));
    });
    $(legacySwitch.root_).find('input')
        .on('change', event => window.myLine.destLegacy = event.target.checked);
}
function gzmtr() {
    // mdc instances
    const designListGZMTRList = _material_list__WEBPACK_IMPORTED_MODULE_1__["MDCList"].attachTo($('#design_list_gzmtr')[0]);
    const panelTypeDialog = _material_dialog__WEBPACK_IMPORTED_MODULE_2__["MDCDialog"].attachTo($('#panel_type_diag')[0]);
    const [psdNumTextField, lineNumTextField] = ['#psd_num', '#line_num'].map(selector => _material_textfield__WEBPACK_IMPORTED_MODULE_4__["MDCTextField"].attachTo($(selector)[0]));
    // init values
    Promise.resolve(Object(_utils__WEBPACK_IMPORTED_MODULE_0__["getParams"])())
        .then(param => {
        psdNumTextField.value = param.psd_num;
        lineNumTextField.value = param.line_num;
    });
    // add event listeners
    designListGZMTRList.listen('MDCList:action', (event) => {
        switch (event.detail.index) {
            case 1:
                panelTypeDialog.open();
                break;
        }
    });
    $(lineNumTextField.root_).find('input')
        .on('input', event => window.myLine.lineNum = event.target.value);
    $(psdNumTextField.root_).find('input')
        .on('input', event => window.myLine.psdNum = event.target.value);
    panelTypeDialog.listen('MDCDialog:closed', (event) => {
        if (event.detail.action === 'close') {
            return;
        }
        window.myLine.infoPanelType = event.detail.action;
    });
}


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,